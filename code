from pudame import*

class GameSprite(sprite.Sprite):
   
    def __init__(self, player_image, player_x, player_y, size_x, size_y):
        
        sprite.Sprite.__init__(self)
 
        #кожен спрайт повинен зберігати властивість image - зображення
        self.image = transform.scale(image.load(player_image), (size_x, size_y))

        #кожен спрайт повинен зберігати властивість rect - прямокутник, в який він вписаний
        self.rect = self.image.get_rect()
        self.rect.x = player_x
        self.rect.y = player_y
 
    def reset(self):
        window.blit(self.image, (self.rect.x, self.rect.y))

class Player(GameSprite):
    #метод, у якому реалізовано управління спрайтом за кнопками стрілочкам клавіатури
    def __init__(self, player_image, player_x, player_y, size_x, size_y, player_x_speed,player_y_speed):
        # Викликаємо конструктор класу (Sprite):
        GameSprite.__init__(self, player_image, player_x, player_y, size_x, size_y)

        self.x_speed = player_x_speed
        self.y_speed = player_y_speed
    def update(self): 
        # Спершу рух по горизонталі
        if hero.rect.x <= win_width-50 and hero.x_speed > 0 or hero.rect.x >= 0 and hero.x_speed < 0:
            self.rect.x += self.x_speed
            # якщо зайшли за стінку, то встанемо впритул до стіни
        platforms_touched = sprite.spritecollide(self, barrier, False)
        if self.x_speed > 0: # йдемо праворуч, правий край персонажа - впритул до лівого краю стіни
            for p in platforms_touched:
                self.rect.right = min(self.rect.right, p.rect.left) # якщо торкнулися відразу кількох, то правий край - мінімальний із можливих
        elif self.x_speed < 0: # йдемо ліворуч, ставимо лівий край персонажа впритул до правого краю стіни
            for p in platforms_touched:
                self.rect.left = max(self.rect.left, p.rect.right) # якщо торкнулися кількох стін, то лівий край - максимальний
        if hero.rect.y <= win_height-50 and hero.y_speed > 0 or hero.rect.y >= 0 and hero.y_speed < 0:
            self.rect.y += self.y_speed
        # якщо зайшли за стінку, то встанемо впритул до стіни
        platforms_touched = sprite.spritecollide(self, barrier, False)
        if self.y_speed > 0: # йдемо вниз
            for p in platforms_touched:
                # Перевіряємо, яка з платформ знизу найвища, вирівнюємося по ній, запам'ятовуємо її як свою опору:
                if p.rect.top < self.rect.bottom:
                    self.rect.bottom = p.rect.top
        elif self.y_speed < 0: # йдемо вгору
            for p in platforms_touched:
                self.rect.top = max(self.rect.top, p.rect.bottom) # вирівнюємо верхній край по нижніх краях стінок, на які наїхали

 # метод "постріл" (використовуємо місце гравця, щоб створити там кулю)
    def fire(self):
        bullet = Bullet('пуля,обріз.png', self.rect.centerx, self.rect.top, 30, 10, 15)
        bullets.add(bullet)

#клас спрайту-ворога
class Enemy(GameSprite):
    side = "left"
    def __init__(self, player_image, player_x, player_y, size_x, size_y, player_speed):
        # Викликаємо конструктор класу (Sprite):
        GameSprite.__init__(self, player_image, player_x, player_y, size_x, size_y)
        self.speed = player_speed

   #рух ворога
    def update(self):
        if self.rect.x <= 420: 
            self.side = "right"
        if self.rect.x >= win_width - 60:
            self.side = "left"
        if self.side == "left":
            self.rect.x -= self.speed
        else:
            self.rect.x += self.speed

class Enemy2(GameSprite):
    side = "left"
    def __init__(self, player_image, player_x, player_y, size_x, size_y, player_speed):
        # Викликаємо конструктор класу (Sprite):
        GameSprite.__init__(self, player_image, player_x, player_y, size_x, size_y)
        self.speed = player_speed

   #рух ворога
    def update(self):
        if self.rect.y <= 40: 
            self.side = "right"
        if self.rect.y >= win_height - 390:
            self.side = "left"
        if self.side == "left":
            self.rect.y -= self.speed
        else:
            self.rect.y += self.speed

class Enemy3(GameSprite):
    side = "left"
    def __init__(self, player_image, player_x, player_y, size_x, size_y, player_speed):
        # Викликаємо конструктор класу (Sprite):
        GameSprite.__init__(self, player_image, player_x, player_y, size_x, size_y)
        self.speed = player_speed

   #рух ворога
    def update(self):
        if self.rect.y <= 390: 
            self.side = "right"
        if self.rect.x >= win_width- 390:
            self.side = "left"
        if self.side == "left":
            self.rect.x -= self.speed
        else:
            self.rect.x += self.speed     

class Enemy4(GameSprite):
    side = "left"
    def __init__(self, player_image, player_x, player_y, size_x, size_y, player_speed):
        # Викликаємо конструктор класу (Sprite):
        GameSprite.__init__(self, player_image, player_x, player_y, size_x, size_y)
        self.speed = player_speed

   #рух ворога
    def update(self):
        if self.rect.x <= 40: 
            self.side = "right"
        if self.rect.x >= win_width - 390:
            self.side = "left"
        if self.side == "left":
            self.rect.x -= self.speed
        else:
            self.rect.x += self.speed                   
           

# клас спрайту-кулі
class Bullet(GameSprite):
    def __init__(self, player_image, player_x, player_y, size_x, size_y, player_speed):
        # Викликаємо конструктор класу (Sprite):
        GameSprite.__init__(self, player_image, player_x, player_y, size_x, size_y)
        self.speed = player_speed
    #рух ворога
    def update(self):
        self.rect.x += self.speed
        # зникає, якщо дійде до краю екрана
        if self.rect.x > win_width+10:
            self.kill()

#Створюємо віконце
win_width = 1400
win_height = 800
display.set_caption("labirint")
back = transform.scale(image.load('кактус.png'), (1400, 800))
window = display.set_mode((win_width, win_height))


barrier = sprite.Group()

bullets =sprite.Group()

monsters = sprite.Group()


#w1 = GameSprite('стовп,малий.png', 100, 0, 50, 400)

Walk_Right = [
    image.load('чорний право1.png'),
    image.load('право 2.png'),
    image.load('право 3.png') ,
    image.load('право 4.png'),
    image.load('право 5.png')
]
Walk_Left = [
    image.load('ліво1.png'),
    image.load('ліво 2.png'),
    image.load('ліво 3.png'),
    image.load('ліво 4.png'),
    image.load('ліво 5.png')
]

animation = 0


#barrier.add(w1)

#створюємо спрайти
hero = Player('чорний стоїть.png',0, 50, 60, 60 , 0, 0)
monster1 = Enemy('бутиль.png', 650, 0, 50, 100, 0)#верхній
final_sprite = GameSprite('двері 1.png',1285 , 610, 100, 150)
monsters.add(monster1)
#змінна, що відповідає за те, як закінчилася гра
finish = False
#ігровий цикл
run = True
while run:

   
    if animation == 4:
        animation = 0
    else:
        animation += 1
    for e in event.get():
        if e.type == QUIT:
            run = False
        elif e.type == KEYDOWN:
            if e.key == K_LEFT:
                hero.x_speed = -10
                hero = Player("чорний ліво – копія.png", player_x, player_y, size_x, size_y)
                
            elif e.key == K_RIGHT:
                for i in Walk_Right:
                    hero = Walk_Right[i+1]
                hero.x_speed = 10
                
            elif e.key == K_UP :
                hero.y_speed = -10
            elif e.key == K_DOWN :
                hero.y_speed = 10
            elif e.key == K_SPACE: 
                hero.fire()

        elif e.type == KEYUP:
            if e.key == K_LEFT :
                hero.x_speed = 0
            elif e.key == K_RIGHT:
                hero.x_speed = 0
            elif e.key == K_UP:
                hero.y_speed = 0
            elif e.key == K_DOWN:
                hero.y_speed = 0
    if not finish:
        window.blit(back ,(0, 0))
               
        hero.update()

        hero.reset()

        bullets.draw(window)
        barrier.draw(window)
        final_sprite.reset()

        sprite.groupcollide(monsters, bullets, True, True)

        bullets.update()

        monsters.update()
        monsters.draw(window)
        sprite.groupcollide(bullets, barrier, True, False)

        #Перевірка зіткнення героя з ворогом та стінами
        if sprite.spritecollide(hero, monsters, False):
            finish = True

            # обчислюємо ставлення
            img = image.load('програв (2).jpg')
            d = img.get_width() // img.get_height()
            window.fill((0, 0, 0))
        
            window.blit(transform.scale(img, (win_width, win_height)), (0, 0))
            

        if sprite.collide_rect(hero, final_sprite):
            finish = True
            img = image.load('images.jpg')
            window.fill((0, 0, 0))
            window.blit(transform.scale(img, (win_width, win_height)), (0, 0))
    
        #цикл спрацьовує кожну 0.05 секунд
        time.delay(50)
        display.update()

